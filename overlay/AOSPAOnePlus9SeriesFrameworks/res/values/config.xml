<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2021 Paranoid Android

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<resources>

    <!-- Paths to the libraries that contain device specific key handlers. -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
        <item>/system_ext/priv-app/TriStateHandler/TriStateHandler.apk</item>
    </string-array>

    <!-- Names of the key handler classes. -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
        <item>co.aospa.device.TriStateHandler</item>
    </string-array>

    <!-- Gestures' key codes. If the gesture is not supported set it to 0. -->
    <integer name="config_drawVKeyCode">252</integer>
    <integer name="config_drawInverseVKeyCode">255</integer>
    <integer name="config_drawOKeyCode">250</integer>
    <integer name="config_drawMKeyCode">247</integer>
    <integer name="config_drawWKeyCode">246</integer>
    <integer name="config_drawSKeyCode">248</integer>
    <integer name="config_drawArrowLeftKeyCode">254</integer>
    <integer name="config_drawArrowRightKeyCode">253</integer>
    <integer name="config_twoFingerSwipeKeyCode">251</integer>

    <!-- Default settings for gestures:
             0 - Disabled
             1 - Wake
             2 - Pulse
             3 - Flashlight
             4 - Airplane
             5 - Play/Pause
             6 - Next
             7 - Previous
             8 - Camera
             9 - Dialer -->
    <integer name="config_drawVDefault">3</integer>
    <integer name="config_drawODefault">8</integer>
    <integer name="config_twoFingerSwipeDefault">5</integer>
    <integer name="config_drawArrowLeftDefault">7</integer>
    <integer name="config_drawArrowRightDefault">6</integer>

    <!-- Whether to intercept inputs on screen off. -->
    <bool name="config_enableKeyHandler">true</bool>

    <!-- Whether device has an alert slider. -->
    <bool name="config_hasAlertSlider">true</bool>

    <!-- OnePlus uses a proprietary vibrator HAL to utilize the new powerful motor since the
         OnePlus 7 Pro. -->
    <bool name="config_hasOnePlusHapticMotor">true</bool>

    <!-- Defines the sysfs attribute path used by the device
         to enable/disable DC dimming. -->
    <string name="config_deviceDcDimmingSysfsNode">/sys/class/drm/card0-DSI-1/dimlayer_bl_en</string>

    <!-- Defines custom OEM sensor for pocket detection. -->
    <string name="config_pocketJudgeVendorSensorName">oneplus.sensor.pocket</string>

    <!-- Doze: should the TYPE_PICK_UP_GESTURE sensor be used as a pulse signal. -->
    <bool name="config_dozePulsePickup">true</bool>

    <!-- Power Management: Specifies whether to decouple the auto-suspend state of the
         device from the display on/off state.

         When false, autosuspend_disable() will be called before the display is turned on
         and autosuspend_enable() will be called after the display is turned off.
         This mode provides best compatibility for devices using legacy power management
         features such as early suspend / late resume.

         When true, autosuspend_display() and autosuspend_enable() will be called
         independently of whether the display is being turned on or off.  This mode
         enables the power manager to suspend the application processor while the
         display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to autosuspend.h for details.
    -->
    <bool name="config_powerDecoupleAutoSuspendModeFromDisplay">true</bool>

    <!-- Power Management: Specifies whether to decouple the interactive state of the
         device from the display on/off state.

         When false, setInteractive(..., true) will be called before the display is turned on
         and setInteractive(..., false) will be called after the display is turned off.
         This mode provides best compatibility for devices that expect the interactive
         state to be tied to the display state.

         When true, setInteractive(...) will be called independently of whether the display
         is being turned on or off.  This mode enables the power manager to reduce
         clocks and disable the touch controller while the display is on.

         This resource should be set to "true" when a doze component has been specified
         to maximize power savings but not all devices support it.

         Refer to power.h for details.
    -->
    <bool name="config_powerDecoupleInteractiveModeFromDisplay">true</bool>

</resources>
